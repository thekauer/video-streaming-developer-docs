"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[2046],{75160:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return l},default:function(){return u}});var i=t(63366),a=(t(67294),t(64983)),r=t(55602),o=["components"],l={},s={_frontmatter:l},p=r.Z;function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)(p,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"IBM Video Streaming Player SDK version 1.1.0 introduced a plugin system which enables you to extend the media player with additional features.\nPlugins will be provided by IBM and must be provided during player initialization in ",(0,a.kt)("inlineCode",{parentName:"p"},"Player.initWithContent(ContentDescriptor, MediaPlayerModule)"),".\nThese extensions may require different player views than ",(0,a.kt)("inlineCode",{parentName:"p"},"com.ibm.video.android.player.android.PlayerView"),". PlayerView requirements for a plugin will always be stated\nin this documentation but can also be queried from the MediaPlayerModule instance itself using ",(0,a.kt)("inlineCode",{parentName:"p"},"MediaPlayerModule.getSupportedPlayerViewType()"),".\nMake sure to always use the appropriate ",(0,a.kt)("inlineCode",{parentName:"p"},"PlayerView"),"."),(0,a.kt)("p",null,"Creation of the plugin is the user’s responsibility, use the constructor of the desired plugin, provide appropriate parameters and set listeners.\nWhen a plugin is passed to a Player instance it will be retained across configuration changes, however the listeners the user provided are not subject\nto the usual ",(0,a.kt)("inlineCode",{parentName:"p"},"Player.attach()")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"Player.detach()")," working. The user needs to manually set and remove those listeners.\nThe current ",(0,a.kt)("inlineCode",{parentName:"p"},"MediaPlayerModule")," in use can be retrieved from the player instance using ",(0,a.kt)("inlineCode",{parentName:"p"},"Player.getMediaPlayerPlugin()")," which returns\na ",(0,a.kt)("inlineCode",{parentName:"p"},"MediaPlayerModule")," that will be cast to the appropriate class that was set during ",(0,a.kt)("inlineCode",{parentName:"p"},"initWithContent"),". The user must know which MediaPlayerModule was\nset during init."),(0,a.kt)("p",null,"Please note that while a ",(0,a.kt)("inlineCode",{parentName:"p"},"MediaPlayerPlugin")," provided through ",(0,a.kt)("inlineCode",{parentName:"p"},"Player.initWithContent")," is retained across configuration changes,\nthe plugin itself might NOT support configuration changes at all due to plugin specific reasons. This will always be stated in the plugin’s documentation\nunder the ",(0,a.kt)("strong",{parentName:"p"},"Plugin limitations")," section."),(0,a.kt)("h2",null,"Ads Plugin"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"IMPORTANT NOTICE")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Ads plugin has been sunset and removed from the SDK. Support is no longer provided for this component.")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-player-sdk-android-using-plugins-mdx-8436aba75518d7497b33.js.map