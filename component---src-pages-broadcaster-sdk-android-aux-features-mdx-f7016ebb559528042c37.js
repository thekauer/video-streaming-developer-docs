"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[9188],{83052:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return h}});var o=n(63366),a=(n(67294),n(64983)),i=n(55602),r=["components"],p={},s={_frontmatter:p},u=i.Z;function h(e){var t=e.components,n=(0,o.Z)(e,r);return(0,a.kt)(u,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",null,"Authentication"),(0,a.kt)("p",null,"IBM Video Streaming SDK usage requires users to authenticate with an IBM ID or a legacy Ustream account to get access to SDK and IBM Channel API features for example broadcasting or listing."),(0,a.kt)("p",null,"The authentication happens using ",(0,a.kt)("strong",{parentName:"p"},"OpenID Connect")," which in turn handles the authorization part using ",(0,a.kt)("strong",{parentName:"p"},"OAuth2.0")," protocol.\nEarlier versions of the SDK had provided a custom in-house implementation of the above two protocolâ€™s Authorization Code flow.\nHowever with the introduction of version 1.0.0 of the SDK, we have removed support for this authorization component.\nInstead we encourage you to use your favourite OpenID Connect & OAuth2.0 implementation, this can provide greater flexibility in your application."),(0,a.kt)("p",null,"Of course we are still providing an example implementation in the provided sample application, but from now on using the official, open-source ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/openid/AppAuth-Android"},"AppAuth-Android")," library provided by the ",(0,a.kt)("a",{parentName:"p",href:"https://openid.net/"},"OpenID Foundation"),".\nYou can find detailed documentation on how to use the auth library on the linked GitHub repository if you need information beyond what the sample application provides."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Basic steps of authentication & authorization"),":"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Acquiring OpenID configuration"),(0,a.kt)("li",{parentName:"ol"},"Loading the authentication endpoint in a ",(0,a.kt)("inlineCode",{parentName:"li"},"CustomTab")),(0,a.kt)("li",{parentName:"ol"},"User authenticates through their login provider"),(0,a.kt)("li",{parentName:"ol"},"User receives an ID Token & Authorization Code"),(0,a.kt)("li",{parentName:"ol"},"Authorization can be used to obtain Access Token using the token endpoint provided by OpenID configuration")),(0,a.kt)("p",null,"Please note that this is a very basic description of what actually happens, and focuses on only the ",(0,a.kt)("em",{parentName:"p"},"Authorization Code flow"),". OpenID and OAuth2.0 is capable of much more than just this.\nFor details about authenticating with IBM Video Streaming services see: ",(0,a.kt)("a",{parentName:"p",href:"https://developers.video.ibm.com/api-basics-authentication"},"API Authentication")," and ",(0,a.kt)("a",{parentName:"p",href:"https://developers.video.ibm.com/api-basics-native-apps"},"API Native app support"),"."),(0,a.kt)("p",null,"For more details about accessing channel based resources from the API see the sample app or visit ",(0,a.kt)("a",{parentName:"p",href:"https://developers.video.ibm.com/channel-api-basic-channel-management"},"IBM Video Streaming Channel API"),"."))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-broadcaster-sdk-android-aux-features-mdx-f7016ebb559528042c37.js.map