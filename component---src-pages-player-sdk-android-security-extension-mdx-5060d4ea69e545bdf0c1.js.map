{"version":3,"file":"component---src-pages-player-sdk-android-security-extension-mdx-5060d4ea69e545bdf0c1.js","mappings":"wPAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,8SAAgS,aAAGC,WAAW,IAC1S,KAAQ,8EADoR,6BAAhS,OAGA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,mBADZ,+FAIL,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,4MAcTJ,EAAWK,gBAAiB","sources":["webpack://example/./src/pages/player-sdk-android/security-extension.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`We recently dropped support of deprecated versions of TLS, and only support TLS 1.2 SSL connection to our services. Older Android versions (below 5.0) do not support TLS 1.2 out of the box, if you are targeting these versions you need to include and configure an extra dependency (`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.android.com/training/articles/security-gms-provider.html\"\n      }}>{`Android Security Provider`}</a>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`implementation \"com.google.android.gms:play-services-base:$actualVersionOfPlayServices\"\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.google.android.gms.security.ProviderInstaller;\n\n//...\n\nif (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n    ProviderInstaller.installIfNeededAsync(context, listener);\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}